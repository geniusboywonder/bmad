# <!-- Powered by BMADâ„¢ Core v5.0 - Production Ready Configuration -->
markdownExploder: true

# ===== PROJECT CONFIGURATION =====
project:
  name: "BMAD Enterprise AI Orchestration Platform"
  version: "5.0.0"
  environment: "production"  # development, staging, production
  features:
    time_conscious_orchestration: true
    selective_context_injection: true
    hitl_phase_gates: true
    advanced_analytics: true
    multi_agent_coordination: true

# ===== QUALITY ASSURANCE CONFIGURATION =====
qa:
  qaLocation: docs/qa
  qualityGates:
    enabled: true
    minTestCoverage: 85
    maxCyclomaticComplexity: 10
    securityScanRequired: true
    performanceBenchmarksRequired: true
  automatedTesting:
    unitTests: true
    integrationTests: true
    e2eTests: true
    loadTests: true
  reporting:
    generateReports: true
    reportLocation: docs/qa/reports
    notifyOnFailure: true

# ===== PRODUCT REQUIREMENTS CONFIGURATION =====
prd:
  prdFile: docs/prd/prd.md
  prdVersion: v5
  prdSharded: true
  prdShardedLocation: docs/prd
  epicFilePattern: epic-{n}*.md
  validation:
    requireAcceptanceCriteria: true
    requireBusinessValue: true
    requireTechnicalFeasibility: true
    autoValidateRequirements: true

# ===== ARCHITECTURE CONFIGURATION =====
architecture:
  architectureFile: docs/architecture/architecture.md
  architectureVersion: v5
  architectureSharded: true
  architectureShardedLocation: docs/architecture
  designPatterns:
    enforceSolidPrinciples: true
    requireDesignReviews: true
    maxComponentComplexity: 15
    requireApiDocumentation: true
  scalability:
    horizontalScalingEnabled: true
    loadBalancingRequired: true
    cachingStrategy: "redis_cluster"
    databaseShardingEnabled: false

# ===== DEVELOPMENT ENVIRONMENT =====
development:
  devLoadAlwaysFiles:
    - docs/CHANGELOG.md
    - docs/SOLID.md
    - docs/CODEPROTOCOL.md
    - docs/STYLEGUIDE.md
    - docs/architecture/architecture.md
    - docs/architecture/tech-stack.md
    - docs/architecture/source-tree.md
    - docs/prd/prd.md
  devDebugLog: .ai/debug-log.md
  devStoryLocation: docs/sprints
  devEnvironment:
    hotReload: true
    debugMode: true
    mockServices: false
    testDataGeneration: true

# ===== PRODUCTION ENVIRONMENT =====
production:
  monitoring:
    enabled: true
    metricsCollection: true
    errorTracking: true
    performanceMonitoring: true
    logAggregation: true
  security:
    enforceHttps: true
    apiRateLimiting: true
    authenticationRequired: true
    auditLogging: true
    dataEncryption: true
  scalability:
    autoScalingEnabled: true
    maxConcurrentUsers: 10000
    requestTimeoutSeconds: 30
    connectionPooling: true
  backup:
    automatedBackups: true
    backupRetentionDays: 30
    disasterRecovery: true
    geoRedundancy: false

# ===== AI/ML CONFIGURATION =====
ai:
  llmProviders:
    primary: "anthropic"  # anthropic, openai, google
    fallback: "openai"
    backup: "google"
  contextManagement:
    maxContextLength: 128000
    contextCompressionEnabled: true
    selectiveInjectionEnabled: true
    timeBasedFiltering: true
  agentConfiguration:
    maxConcurrentAgents: 50
    agentTimeoutSeconds: 300
    retryAttempts: 3
    circuitBreakerEnabled: true

# ===== TIME-CONSCIOUS ORCHESTRATION =====
orchestration:
  timeManagement:
    enabled: true
    phaseTimeTracking: true
    efficiencyMonitoring: true
    overtimeAlerts: true
  phaseGates:
    enabled: true
    autoCreateGates: true
    requireApproval: true
    qualityGates: true
  workflowOptimization:
    parallelExecution: true
    resourcePooling: true
    loadBalancing: true
    predictiveScaling: false

# ===== HITL CONFIGURATION =====
hitl:
  phaseGates:
    enabled: true
    autoCreateGates: true
    requireApproval: true
    escalationEnabled: true
  oversightLevels:
    default: "medium"  # low, medium, high
    criticalPhases: "high"
    experimentalFeatures: "high"
  responseTime:
    warningThresholdMinutes: 60
    criticalThresholdMinutes: 240
    autoEscalation: true

# ===== INTEGRATION CONFIGURATION =====
integrations:
  versionControl:
    provider: "git"
    autoCommit: true
    branchStrategy: "feature_branch"
    codeReviewRequired: true
  ciCd:
    enabled: true
    provider: "github_actions"
    autoDeploy: false
    stagingEnvironment: true
  monitoring:
    provider: "datadog"
    errorTracking: true
    performanceMonitoring: true
    customMetrics: true

# ===== COMPLIANCE & GOVERNANCE =====
compliance:
  dataPrivacy:
    gdprCompliant: true
    dataRetentionPolicy: true
    userConsentRequired: true
  security:
    penetrationTesting: true
    vulnerabilityScanning: true
    securityAudits: true
  audit:
    auditLogging: true
    complianceReporting: true
    regulatoryCompliance: false

# ===== SYSTEM LIMITS & THRESHOLDS =====
limits:
  maxProjectsPerUser: 50
  maxConcurrentWorkflows: 20
  maxContextArtifacts: 10000
  maxHitlRequestsPerDay: 100
  maxApiRequestsPerMinute: 1000
  maxFileSizeMb: 100
  maxProcessingTimeMinutes: 60

# ===== NOTIFICATIONS & ALERTS =====
notifications:
  email:
    enabled: true
    smtpConfigured: false
    alertOnFailures: true
    weeklyReports: true
  slack:
    enabled: false
    webhookUrl: ""
    alertChannels: ["alerts", "devops"]
  webhooks:
    enabled: true
    endpoints: []
    events: ["phase_complete", "gate_approved", "error_occurred"]

# ===== BACKUP & RECOVERY =====
backup:
  automated:
    enabled: true
    schedule: "daily"
    retention: 30
    compression: true
  disasterRecovery:
    enabled: false
    geoRedundancy: false
    failoverTimeMinutes: 60
  dataExport:
    enabled: true
    formats: ["json", "csv", "pdf"]
    autoExport: false

# ===== EXPERIMENTAL FEATURES =====
experimental:
  advancedAnalytics: false
  predictiveModeling: false
  autoOptimization: false
  multiModalProcessing: false
  federatedLearning: false

# ===== LEGACY COMPATIBILITY =====
customTechnicalDocuments: null
slashPrefix: BMad
markdownExploder: true
