# <!-- Powered by BMADâ„¢ Core -->
workflow:
  id: greenfield-fullstack
  name: Greenfield Full-Stack Application Development
  description: >-
    Agent workflow for building full-stack applications from concept to development.
    Supports both comprehensive planning for complex projects and rapid prototyping for simple ones.
  type: greenfield
  project_types:
    - web-app
    - saas
    - enterprise-app
    - prototype
    - mvp

  sequence:
    # ANALYZE STAGE
    - agent: analyst
      creates: analyze-plan.md
      notes: "HITL REQUIRED: Create analysis phase plan outlining requirements gathering approach, stakeholder interviews, and deliverables. Requires human approval before proceeding."

    - agent: analyst
      creates: product-requirement.md
      requires: analyze-plan.md
      notes: "Create comprehensive product requirements document outlining features, user needs, and business objectives. SAVE OUTPUT: Copy final product-requirement.md to your project's docs/ folder."

    - agent: pm
      creates: prd-epic.md
      requires: product-requirement.md
      notes: "Create epic-level breakdown of product requirements into major feature themes. SAVE OUTPUT: Copy final prd-epic.md to your project's docs/ folder."

    - agent: pm
      creates: feature-story.md
      requires: prd-epic.md
      notes: "Create detailed user stories for each epic with acceptance criteria and story points. SAVE OUTPUT: Copy final feature-story.md to your project's docs/ folder."

    # DESIGN STAGE
    - agent: architect
      creates: design-plan.md
      requires: feature-story.md
      notes: "HITL REQUIRED: Create design phase plan covering UI/UX approach, architecture decisions, and technical stack. Requires human approval before proceeding."

    - agent: ux-expert
      creates: front-end-spec.md
      requires: design-plan.md
      notes: "Create UI/UX specification with wireframes, component library, and user flows. SAVE OUTPUT: Copy final front-end-spec.md to your project's docs/ folder."

    - agent: architect
      creates: fullstack-architecture.md
      requires: front-end-spec.md
      notes: "Create comprehensive fullstack architecture including backend API design, data models, and infrastructure. SAVE OUTPUT: Copy final fullstack-architecture.md to your project's docs/ folder."

    # BUILD STAGE
    - agent: sm
      creates: build-plan.md
      requires: fullstack-architecture.md
      notes: "HITL REQUIRED: Create build phase plan outlining development approach, sprint structure, and implementation order. Requires human approval before proceeding."

    - agent: sm
      creates: story.md
      requires: build-plan.md
      notes: "Create development stories with technical tasks, dependencies, and acceptance criteria for implementation."

    - agent: dev
      creates: implementation-files.md
      requires: story.md
      notes: "Implement code based on approved stories. Document all created/modified files and key implementation decisions."

    - agent: dev
      creates: bug-fixes.md
      requires: implementation-files.md
      notes: "Document bugs discovered during development and their resolutions. Track bug fix commits and validation steps."

    # VALIDATE STAGE
    - agent: qa
      creates: validate-plan.md
      requires: bug-fixes.md
      notes: "HITL REQUIRED: Create validation phase plan covering testing strategy, quality gates, and acceptance criteria. Requires human approval before proceeding."

    - agent: qa
      creates: test-case.md
      requires: validate-plan.md
      notes: "Create comprehensive test cases including unit tests, integration tests, and acceptance criteria verification."

    - agent: qa
      creates: validation-report.md
      requires: test-case.md
      notes: "Execute test cases and document results. Include pass/fail status, code coverage metrics, and recommendations for production readiness."

    # LAUNCH STAGE
    - agent: deployer
      creates: launch-plan.md
      requires: validation-report.md
      notes: "HITL REQUIRED: Create launch phase plan covering deployment strategy, rollback procedures, and monitoring setup. Requires human approval before proceeding."

    - agent: deployer
      creates: deployment-checklist.md
      requires: launch-plan.md
      notes: "Create comprehensive deployment checklist including pre-deployment validation, deployment steps, and post-deployment verification."

    - agent: deployer
      creates: deployment-report.md
      requires: deployment-checklist.md
      notes: "Execute deployment following approved plan and checklist. Document all steps, issues encountered, resolutions, and final production status."

  flow_diagram: |
    ```mermaid
    graph TD
        A[Start: Greenfield Project] --> B[analyst: project-brief.md]
        B --> C[pm: prd.md]
        C --> D[ux-expert: front-end-spec.md]
        D --> D2{Generate v0 prompt?}
        D2 -->|Yes| D3[ux-expert: create v0 prompt]
        D2 -->|No| E[architect: fullstack-architecture.md]
        D3 --> D4[User: generate UI in v0/Lovable]
        D4 --> E
        E --> F{Architecture suggests PRD changes?}
        F -->|Yes| G[pm: update prd.md]
        F -->|No| H[po: validate all artifacts]
        G --> H
        H --> I{PO finds issues?}
        I -->|Yes| J[Return to relevant agent for fixes]
        I -->|No| K[po: shard documents]
        J --> H
        
        K --> L[sm: create story]
        L --> M{Review draft story?}
        M -->|Yes| N[analyst/pm: review & approve story]
        M -->|No| O[dev: implement story]
        N --> O
        O --> P{QA review?}
        P -->|Yes| Q[qa: review implementation]
        P -->|No| R{More stories?}
        Q --> S{QA found issues?}
        S -->|Yes| T[dev: address QA feedback]
        S -->|No| R
        T --> Q
        R -->|Yes| L
        R -->|No| U{Epic retrospective?}
        U -->|Yes| V[po: epic retrospective]
        U -->|No| W[Project Complete]
        V --> W

        B -.-> B1[Optional: brainstorming]
        B -.-> B2[Optional: market research]
        D -.-> D1[Optional: user research]
        E -.-> E1[Optional: technical research]

        style W fill:#90EE90
        style K fill:#ADD8E6
        style L fill:#ADD8E6
        style O fill:#ADD8E6
        style D3 fill:#E6E6FA
        style D4 fill:#E6E6FA
        style B fill:#FFE4B5
        style C fill:#FFE4B5
        style D fill:#FFE4B5
        style E fill:#FFE4B5
        style N fill:#F0E68C
        style Q fill:#F0E68C
        style V fill:#F0E68C
    ```

  decision_guidance:
    when_to_use:
      - Building production-ready applications
      - Multiple team members will be involved
      - Complex feature requirements
      - Need comprehensive documentation
      - Long-term maintenance expected
      - Enterprise or customer-facing applications

  handoff_prompts:
    analyst_to_pm: "Product requirements complete. Save it as docs/product-requirement.md in your project, then create the PRD epics."
    pm_to_stories: "PRD epics ready. Save it as docs/prd-epic.md in your project, then create detailed feature stories."
    stories_to_design: "Feature stories complete. Save it as docs/feature-story.md in your project, then create the design plan."
    design_to_ux: "Design plan approved. Save it as docs/design-plan.md in your project, then create the UI/UX specification."
    ux_to_architect: "UI/UX spec complete. Save it as docs/front-end-spec.md in your project, then create the fullstack architecture."
    architect_to_build: "Architecture complete. Save it as docs/fullstack-architecture.md in your project, then create the build plan."
    build_to_dev: "Build plan approved. Save it as docs/build-plan.md in your project, then create development stories."
    dev_to_implement: "Stories ready. Save it as docs/story.md in your project, then begin implementation."
    implement_to_bugs: "Implementation complete. Save it as docs/implementation-files.md in your project, then document any bug fixes."
    bugs_to_validate: "Bug fixes documented. Save it as docs/bug-fixes.md in your project, then create validation plan."
    validate_to_test: "Validation plan approved. Save it as docs/validate-plan.md in your project, then create test cases."
    test_to_report: "Test cases ready. Save it as docs/test-case.md in your project, then execute tests and create validation report."
    validate_to_launch: "Validation complete. Save it as docs/validation-report.md in your project, then create launch plan."
    launch_to_checklist: "Launch plan approved. Save it as docs/launch-plan.md in your project, then create deployment checklist."
    checklist_to_deploy: "Deployment checklist ready. Save it as docs/deployment-checklist.md in your project, then execute deployment."
    complete: "Deployment complete. Save final deployment report as docs/deployment-report.md. Project successfully launched!"
